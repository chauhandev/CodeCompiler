{"ast":null,"code":"import * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-html';\nimport 'ace-builds/src-noconflict/mode-css';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-github_dark';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/tabs\";\nconst _c0 = [\"editorHTML\"];\nconst _c1 = [\"editorCSS\"];\nconst _c2 = [\"editorJS\"];\nconst _c3 = [\"editorJava\"];\nconst _c4 = [\"editorCpp\"];\nconst _c5 = [\"editorJavaScript\"];\nfunction EditorComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-tab\", 15)(2, \"div\", 16);\n    i0.ɵɵelement(3, \"div\", 17, 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"mat-tab\", 19)(6, \"div\", 16);\n    i0.ɵɵelement(7, \"div\", 17, 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"mat-tab\", 21)(10, \"div\", 16);\n    i0.ɵɵelement(11, \"div\", 17, 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction EditorComponent_ng_template_4_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-tab\", 23)(2, \"div\", 16);\n    i0.ɵɵelement(3, \"div\", 17, 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction EditorComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EditorComponent_ng_template_4_ng_container_0_Template, 5, 0, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.language === \"java\")(\"ngIfElse\", _r3);\n  }\n}\nfunction EditorComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-tab\", 25)(2, \"div\", 16);\n    i0.ɵɵelement(3, \"div\", 17, 26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction EditorComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EditorComponent_ng_template_6_ng_container_0_Template, 5, 0, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.language === \"cpp\")(\"ngIfElse\", _r5);\n  }\n}\nfunction EditorComponent_ng_template_8_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-tab\", 27)(2, \"div\", 16);\n    i0.ɵɵelement(3, \"div\", 17, 28);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction EditorComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EditorComponent_ng_template_8_ng_container_0_Template, 5, 0, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.language === \"js\")(\"ngIfElse\", _r7);\n  }\n}\nfunction EditorComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tab\", 29)(1, \"div\");\n    i0.ɵɵtext(2, \" Language Not Supported currently ! \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditorComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function EditorComponent_ng_template_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.getOutput());\n    });\n    i0.ɵɵtext(1, \"Run\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditorComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 31);\n  }\n}\nfunction EditorComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 32);\n  }\n}\nexport let EditorComponent = /*#__PURE__*/(() => {\n  class EditorComponent {\n    constructor(Service) {\n      this.Service = Service;\n      this.isResizing = false;\n      this.initialX = 0;\n      this.initialY = 0;\n      this.initialEditorWidth = 0;\n      this.initialEditorHeight = 0;\n      this.MediaQuery = 768;\n      this.theme = 'ace/theme/github';\n      this.editorOptions = {\n        theme: 'ace/theme/github',\n        fontSize: 14,\n        showPrintMargin: false,\n        setUseWrapMode: false,\n        gutterStyle: 'background-color: #f0f0f0',\n        backgroundColor: 'red',\n        hScrollBarAlwaysVisible: false,\n        wrap: true\n      };\n      Service.getmode().subscribe(mode => {\n        if (this.language?.toLowerCase() === 'html') {\n          const editorHTMLInstance = ace.edit(this.editorHTML.nativeElement);\n          const editorCSSInstance = ace.edit(this.editorCSS.nativeElement);\n          const editorJSInstance = ace.edit(this.editorJS.nativeElement);\n          this.updateTheme(mode, editorHTMLInstance);\n          this.updateTheme(mode, editorCSSInstance);\n          this.updateTheme(mode, editorJSInstance);\n        } else if (this.language?.toLowerCase() === 'java') {\n          const editorJavaInstance = ace.edit(this.editorJava.nativeElement);\n          this.updateTheme(mode, editorJavaInstance);\n        } else if (this.language?.toLowerCase() === 'cpp') {\n          const editorCppInstance = ace.edit(this.editorCpp.nativeElement);\n          this.updateTheme(mode, editorCppInstance);\n        } else if (this.language?.toLowerCase() === 'js') {\n          const editorJavaScriptInstance = ace.edit(this.editorJavaScript.nativeElement);\n          this.updateTheme(mode, editorJavaScriptInstance);\n        }\n      });\n    }\n    updateTheme(mode, editor) {\n      const theme = mode == 'light' ? 'ace/theme/github' : 'ace/theme/github_dark';\n      const background = mode == 'light' ? '#ffffff' : '#1c2130';\n      editor.setTheme(theme);\n      editor.container.style.background = background;\n      if (mode === 'light') {\n        editor.container.classList.remove('darkMode');\n        editor.container.classList.add('lightMode');\n      } else {\n        editor.container.classList.remove('lightMode');\n        editor.container.classList.add('darkMode');\n      }\n    }\n    ngAfterViewInit() {\n      this.createEditor();\n    }\n    createEditor() {\n      if (this.language?.toLowerCase() === 'html') {\n        this.initializeEditor(this.editorHTML, 'ace/mode/html', `<!DOCTYPE html>\\n<html lang=\"en\">\\n\\t<head>\\n\\t\\t<meta charset=\"UTF-8\">\\n\\t\\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n\\t\\t<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\\n\\t\\t<title>HTML 5 Boilerplate</title>\\n\\t\\t<link rel=\"stylesheet\" href=\"style.css\">\\n\\t</head>\\n\\t<body>\\n\\t\\t<script src=\"index.js\"></script>\\n\\t</body>\\n</html>`);\n        this.initializeEditor(this.editorCSS, 'ace/mode/css', 'body {\\n\\tmargin: 20px;\\n}');\n        this.initializeEditor(this.editorJS, 'ace/mode/javascript', 'console.log(\"from script file\");');\n      } else if (this.language?.toLowerCase() === 'java') {\n        this.initializeEditor(this.editorJava, 'ace/mode/java', 'class HelloWorld {\\n\\tpublic static void main(String[] args) {\\n\\t\\tSystem.out.println(\"Hello, World!\");\\n\\t}\\n}');\n      } else if (this.language?.toLowerCase() === 'cpp') {\n        this.initializeEditor(this.editorCpp, 'ace/mode/c_cpp', '#include <iostream>\\n\\nint main() {\\n\\tstd::cout << \"Hello, World!\";\\n\\n\\treturn 0;\\n}');\n      } else if (this.language?.toLowerCase() === 'js') {\n        this.initializeEditor(this.editorJavaScript, 'ace/mode/javascript', 'console.log(\"Welcome to Dev++\");');\n      }\n    }\n    initializeEditor(editorRef, mode, content) {\n      const editorInstance = ace.edit(editorRef.nativeElement, this.editorOptions);\n      editorInstance.getSession().setMode(mode);\n      editorInstance.getSession().setValue(content);\n    }\n    getOutput() {\n      const editorOptions = {\n        theme: 'ace/theme/monokai',\n        fontSize: 14,\n        showPrintMargin: false\n      };\n      const output = document.getElementById('htmlOutput');\n      if (this.language?.toLowerCase() == \"html\") {\n        const editorHTMLInstance = ace.edit(this.editorHTML.nativeElement, editorOptions);\n        const existingHtml = editorHTMLInstance.getSession().getValue();\n        const editorCSSInstance = ace.edit(this.editorCSS.nativeElement, editorOptions);\n        const existingCss = editorCSSInstance.getSession().getValue();\n        const editorJSInstance = ace.edit(this.editorJS.nativeElement, editorOptions);\n        const existingJS = editorJSInstance.getSession().getValue();\n        // Modify the existing HTML string by adding CSS and JS\n        var modifiedHtml = existingHtml.replace(/(<head>.*<\\/head>)/s, `$1\\n<style>${existingCss}</style>\\n<script>${existingJS}</script>`);\n        var iframe = document.createElement('iframe');\n        // Set the srcdoc attribute with the modified HTML content\n        iframe.srcdoc = modifiedHtml;\n        iframe.height = '100%';\n        iframe.width = '100%';\n        // Set other attributes if needed\n        iframe.width = \"100%\";\n        iframe.height = \"100%\";\n        iframe.frameBorder = \"none\";\n        // Append the iframe to the document body\n        if (output) {\n          const previousFrame = output.getElementsByTagName(\"iframe\")[0];\n          if (previousFrame) output.removeChild(previousFrame);\n          output.appendChild(iframe);\n        }\n      } else if (this.language?.toLowerCase() == \"java\") {\n        const editorJavaInstance = ace.edit(this.editorJava.nativeElement, editorOptions);\n        this.runCode(this.language.toLowerCase(), editorJavaInstance.getSession().getValue());\n      } else if (this.language?.toLowerCase() == \"cpp\") {\n        const editorCppInstance = ace.edit(this.editorCpp.nativeElement, editorOptions);\n        this.runCode(this.language.toLowerCase(), editorCppInstance.getSession().getValue());\n      } else if (this.language?.toLowerCase() == \"js\") {\n        const editorJavaScriptInstance = ace.edit(this.editorJavaScript.nativeElement, editorOptions);\n        this.runCode(this.language.toLowerCase(), editorJavaScriptInstance.getSession().getValue());\n      }\n    }\n    runCode(language, content) {\n      try {\n        this.Service.run({\n          LANGUAGE: language.toLowerCase(),\n          CODE: content\n        }).subscribe(response => {\n          // Handle successful response\n          const outputDiv = document.getElementById('otherOutput');\n          if (outputDiv) {\n            if (response.error) {\n              const outputString = response.error;\n              outputDiv.innerHTML = outputString;\n            } else {\n              const outputString = response.output;\n              outputDiv.innerHTML = outputString;\n            }\n          }\n          console.log(response);\n        }, error => {\n          console.error(error);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    resize(event) {\n      this.isResizing = true;\n      this.initialX = event.clientX;\n      this.initialY = event.clientY;\n      const editor = document.getElementById('editorDiv');\n      if (editor) {\n        this.initialEditorWidth = editor.clientWidth;\n        this.initialEditorHeight = editor.clientHeight;\n      }\n      this.handleMouseMove = this.handleMouseMove.bind(this);\n      this.handleMouseUp = this.handleMouseUp.bind(this);\n      document.addEventListener('mousemove', this.handleMouseMove);\n      document.addEventListener('mouseup', this.handleMouseUp);\n    }\n    handleMouseMove(event) {\n      let screenWidth = window.innerWidth;\n      let screenHeight = window.innerWidth;\n      if (this.isResizing) {\n        const editor = document.getElementById('editorDiv');\n        if (editor) {\n          if (screenWidth > this.MediaQuery) {\n            const deltaX = event.clientX - this.initialX;\n            const newDiv1Width = this.initialEditorWidth + deltaX;\n            editor.style.width = `${newDiv1Width}px`;\n            editor.style.height = `100%`;\n          } else {\n            const deltaY = event.clientY - this.initialY;\n            let newDivHeight = this.initialEditorHeight + deltaY;\n            editor.style.height = `${newDivHeight}px`;\n            editor.style.width = `100%`;\n          }\n        }\n      }\n    }\n    handleMouseUp(event) {\n      this.isResizing = false;\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n    }\n    static #_ = this.ɵfac = function EditorComponent_Factory(t) {\n      return new (t || EditorComponent)(i0.ɵɵdirectiveInject(i1.Service));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditorComponent,\n      selectors: [[\"app-editor\"]],\n      viewQuery: function EditorComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorHTML = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorCSS = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorJS = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorJava = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorCpp = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorJavaScript = _t.first);\n        }\n      },\n      inputs: {\n        language: \"language\"\n      },\n      decls: 21,\n      vars: 4,\n      consts: [[1, \"mainEditor\"], [\"id\", \"editorDiv\"], [\"id\", \"tab-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseif1\", \"\"], [\"elseif2\", \"\"], [\"elseif3\", \"\"], [\"elseBlock\", \"\"], [\"disabled\", \"\", 1, \"disableTab\"], [\"mat-tab-label\", \"\"], [\"id\", \"resize\", 3, \"mousedown\"], [\"id\", \"outputDiv\"], [\"label\", \"Output\"], [\"id\", \"htmlOutput\", \"class\", \"lightMode\", 4, \"ngIf\", \"ngIfElse\"], [\"otherOutputBlock\", \"\"], [\"label\", \"index.html\"], [1, \"editorContainer\"], [1, \"editor\"], [\"editorHTML\", \"\"], [\"label\", \"style.css\"], [\"editorCSS\", \"\"], [\"label\", \"script.js\"], [\"editorJS\", \"\"], [\"label\", \"main.java\"], [\"editorJava\", \"\"], [\"label\", \"main.cpp\"], [\"editorCpp\", \"\"], [\"label\", \"main.js\"], [\"editorJavaScript\", \"\"], [\"label\", \"Language Not Supported\"], [\"mat-button\", \"\", \"color\", \"accent\", 1, \"exeuteButton\", 3, \"click\"], [\"id\", \"htmlOutput\", 1, \"lightMode\"], [\"id\", \"otherOutput\"]],\n      template: function EditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-tab-group\", 2);\n          i0.ɵɵtemplate(3, EditorComponent_ng_container_3_Template, 13, 0, \"ng-container\", 3);\n          i0.ɵɵtemplate(4, EditorComponent_ng_template_4_Template, 1, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(6, EditorComponent_ng_template_6_Template, 1, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(8, EditorComponent_ng_template_8_Template, 1, 2, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵtemplate(10, EditorComponent_ng_template_10_Template, 3, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(12, \"mat-tab\", 8);\n          i0.ɵɵtemplate(13, EditorComponent_ng_template_13_Template, 2, 0, \"ng-template\", 9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\", 10);\n          i0.ɵɵlistener(\"mousedown\", function EditorComponent_Template_div_mousedown_14_listener($event) {\n            return ctx.resize($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 11)(16, \"mat-tab-group\")(17, \"mat-tab\", 12);\n          i0.ɵɵtemplate(18, EditorComponent_div_18_Template, 1, 0, \"div\", 13);\n          i0.ɵɵtemplate(19, EditorComponent_ng_template_19_Template, 1, 0, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(5);\n          const _r11 = i0.ɵɵreference(20);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.language === \"html\")(\"ngIfElse\", _r1);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngIf\", ctx.language === \"html\")(\"ngIfElse\", _r11);\n        }\n      },\n      dependencies: [i2.NgIf, i3.MatButton, i4.MatTabLabel, i4.MatTab, i4.MatTabGroup],\n      styles: [\".mainEditor[_ngcontent-%COMP%]{display:flex;flex-direction:row;height:100%}#resize[_ngcontent-%COMP%]{width:5px;cursor:ew-resize}.exeuteButton[_ngcontent-%COMP%]{opacity:1!important;pointer-events:all!important}#editorDiv[_ngcontent-%COMP%]{width:calc(50% - 5px);height:100%;min-width:20%;min-height:20%}#outputDiv[_ngcontent-%COMP%]{flex:1;min-width:20%;min-height:20%;border-left:2px solid rgb(46 60 81/1);border-top:0px}#otherOutput[_ngcontent-%COMP%]{margin:0 10px}.editorContainer[_ngcontent-%COMP%]{height:100%;display:flex;flex:1}.editor[_ngcontent-%COMP%]{width:100%;height:100%}#htmlOutput[_ngcontent-%COMP%]{width:calc(100% - 5px);height:100%}@media only screen and (max-width: 768px){.mainEditor[_ngcontent-%COMP%]{flex-direction:column}#editorDiv[_ngcontent-%COMP%]{width:100%;height:calc(50% - 5px);min-height:20%;max-height:80%}.editor[_ngcontent-%COMP%]{width:100%;height:100%}#resize[_ngcontent-%COMP%]{height:5px;width:100%;cursor:ns-resize}#outputDiv[_ngcontent-%COMP%]{border-left:0px;border-top:2px solid rgb(46 60 81/1)}}\"]\n    });\n  }\n  return EditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}