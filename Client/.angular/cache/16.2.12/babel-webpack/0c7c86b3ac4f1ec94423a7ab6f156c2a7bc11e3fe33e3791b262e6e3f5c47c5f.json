{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service\";\nimport * as i2 from \"./components/header/header.component\";\nimport * as i3 from \"./components/language-selector/language-selector.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(service) {\n      this.service = service;\n      this.title = 'Dev++';\n      this.theme = 'lightMode';\n      // this.theme = service.getmode() =='light' ? 'lightMode' :'darkMode';\n    }\n\n    ngOnInit() {\n      this.service.getmode().subscribe(theme => {\n        this.theme = theme == 'light' ? 'lightMode' : 'darkMode';\n      });\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Service));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[1, \"container\"], [1, \"languageSelector\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-header\")(2, \"app-language-selector\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.theme);\n        }\n      },\n      dependencies: [i2.HeaderComponent, i3.LanguageSelectorComponent],\n      styles: [\".container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%}.container[_ngcontent-%COMP%] > .languageSelector[_ngcontent-%COMP%]{height:100%}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}