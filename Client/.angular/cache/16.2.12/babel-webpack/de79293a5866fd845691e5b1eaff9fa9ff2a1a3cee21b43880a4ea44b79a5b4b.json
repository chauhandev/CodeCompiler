{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let Service = /*#__PURE__*/(() => {\n  class Service {\n    constructor(http) {\n      this.http = http;\n      this.mode = new BehaviorSubject('light');\n      this.apiUrl = environment.apiUrl;\n    }\n    getmode() {\n      return this.mode.asObservable();\n    }\n    toggleMode() {\n      const currentTheme = this.mode.value;\n      const newTheme = this.mode.value === 'light' ? 'dark' : 'light';\n      this.mode.next(newTheme);\n    }\n    run(data) {\n      return this.http.post(this.apiUrl, data);\n    }\n    static #_ = this.ɵfac = function Service_Factory(t) {\n      return new (t || Service)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: Service,\n      factory: Service.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Service;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}